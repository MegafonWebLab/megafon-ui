@import (reference) '~styles/base.less';

@b: e('.mfui-grid-column');

@{b} {
    box-sizing: border-box;

    .generateColumns(all);
    .generateOffsets(all);
    .generateOrder(all-order);

    @media @desktopMU {
        .generateColumns(wide);
        .generateOrder(wide-order);
        .generateOffsets(wide);
    }
    @media @desktopS {
        .generateColumns(desktop);
        .generateOrder(desktop-order);
        .generateOffsets(desktop);
    }
    @media @mobileB {
        .generateColumns(tablet);
        .generateOrder(tablet-order);
        .generateOffsets(tablet);
    }
    @media @mobileSM {
        .generateColumns(mobile);
        .generateOrder(mobile-order);
        .generateOffsets(mobile);
    }

    &_grow {
        flex-grow: 1;
    }

    &_align_right {
        margin-left: auto;
    }

    &_align_left {
        margin-right: auto;
    }

    &_align_center {
        margin-right: auto;
        margin-left: auto;
    }

    &_flex {
        display: flex;
        flex-grow: 0;
        flex-shrink: 0;
    }
}

.generateColumns(@resolution, @columnCount: 12, @i: 1) when (@i <= @columnCount) {
    &_@{resolution}_@{i} {
        width: (100% / @columnCount) * @i;
    }
    .generateColumns(@resolution, @columnCount, (@i + 1));
}

.generateOrder(@class, @maxOrder:100, @z:0) when (@z <= @maxOrder) {
    &_@{class}_@{z} {
        order: @z;
    }
    .generateOrder(@class, @maxOrder, (@z + 1));
}

.generateOffsets(@resolution, @columnCount: 12, @i: 1) when (@i <= @columnCount) {
    &_left-offset-@{resolution}_@{i} {
        margin-left: (100% / @columnCount) * @i;
    }

    &_right-offset-@{resolution}_@{i} {
        margin-right: (100% / @columnCount) * @i;
    }
    .generateOffsets(@resolution, @columnCount, (@i + 1));
}
