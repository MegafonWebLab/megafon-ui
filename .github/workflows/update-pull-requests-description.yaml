name: Update pull requests description

on:
  workflow_run:
    workflows: ["test and release"]
    types:
      - completed

jobs:
  update:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.event == 'pull_request' && github.event.workflow_run.conclusion == 'success' }}

    steps:
      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '17.5'

      - name: 'Download artifact'
        uses: actions/github-script@v6
        id: artifact
        with:
          result-encoding: string
          script: |
            const fs = require('fs');

            const artifacts = await github.rest.actions.listWorkflowRunArtifacts({
               owner: context.repo.owner,
               repo: context.repo.repo,
               run_id: ${{ github.event.workflow_run.id }},
            });

            const matchArtifacts = artifacts?.data?.artifacts?.filter(artifact => artifact.name === 'pr-release-info');

            if (!matchArtifacts || matchArtifacts.length === 0) {
              console.log('No artifacts found.');

              process.exit(0);
            }

            const matchArtifact = matchArtifacts[0];

            const download = await github.rest.actions.downloadArtifact({
               owner: context.repo.owner,
               repo: context.repo.repo,
               artifact_id: matchArtifact.id,
               archive_format: 'zip',
            });

            fs.writeFileSync('${{ github.workspace }}/info.zip', Buffer.from(download.data));

            return matchArtifact.id;

      - run: unzip info.zip

      - name: 'Update pull request description'
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');

            const filesList = fs.readdirSync('${{ github.workspace }}');
            const releaseInfoFilePaths = filesList.filter(f => f.includes('release-info-'));

            if (!releaseInfoFilePaths || releaseInfoFilePaths.length === 0) {
              console.log('No files found. Directory files list: ', filesList);

              process.exit(0);
            }

            const releaseInfo = fs.readFileSync(releaseInfoFilePaths[0]);
            const prNumber = Number(releaseInfoFilePaths[0].match(RegExp(/release-info-(\d+)\.txt/))?.[1]);

            if (!Number.isInteger(prNumber)) {
              console.log('Couldn\'t define pull request number', filesList);

              process.exit(0);
            }

            await github.rest.pulls.update({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: prNumber,
              body: releaseInfo.toString(),
            });

            console.log(`Pull request #${prNumber} description updated.`);

      - name: 'Remove artifact'
        if: ${{ steps.artifact.outputs.result }}
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');

            await github.rest.actions.deleteArtifact({
              owner: context.repo.owner,
              repo: context.repo.repo,
              artifact_id: ${{ steps.artifact.outputs.result }},
            });

            console.log(`Artifact (id:${{ steps.artifact.outputs.result }}) removed.`);

